import "../assets/fonts/RobotoMono-Light.ttf";

import { VerticalBox, HorizontalBox } from "std-widgets.slint";
import { Slider } from "slider.slint";
import { Theme } from "theme.slint";

component ValueTag inherits HorizontalLayout {
    in property<string> label;

    alignment: center;
    Rectangle {
        height: 20px;
        width: lbl.width + 10px;
        border-radius: 5px;
        background: Theme.background;

        lbl := Text {
            text: label;
            font-family: "Roboto Mono";
            font-weight: 800;
            color: Theme.foreground;
        }
    }
}

component TimerSlider inherits VerticalLayout {
    in property<string> label;
    in property<int> min;
    in property<int> max;
    in property<string> tail;
    in property<color> sl_color;

    in-out property<int> value <=> sldr.value;

    alignment: end;


    Text {
        text: label;
        horizontal-alignment: center;
        font-size: 11pt;
        color: Theme.foreground-darker;
    }
    ValueTag {
        label: "\{sldr.value}\{tail}";
    }
    Rectangle {
        sldr := Slider {
            width: parent.width;
            height: 20px;
            value: 1;
            minimum: min;
            maximum: max;
            color: root.sl_color;
            ft-color: root.sl_color;
            ghv-color: root.sl_color;
            mt-color: Theme.background;
        }
    }
}

export component TimerConfig inherits Rectangle {
    background: Theme.background_light;
    VerticalBox {
        Text {
            text: "Timer";
            horizontal-alignment: center;
            font-size: 11pt;
            color: Theme.foreground;
        }
        TimerSlider {
            label: "Focus";
            min: 1;
            max: 90;
            value: 25;
            tail: ":00";
            sl-color: Theme.focus_round;
        }
        TimerSlider {
            label: "Short Break";
            min: 1;
            max: 90;
            value: 2;
            tail: ":00";
            sl-color: Theme.short_round;
        }
        TimerSlider {
            label: "Long Break";
            min: 1;
            max: 90;
            value: 15;
            tail: ":00";
            sl-color: Theme.long_round;
        }
        TimerSlider {
            label: "Round";
            min: 1;
            max: 12;
            value: 4;
            //tail: "";
            sl-color: Theme.background_lightest;
        }
        Text {
            text: "Reset Defaults";
            font-size: 11pt;
            horizontal-alignment: center;
            rd_ta := TouchArea {}

            states [
                on_hvr when rd_ta.has-hover: {
                    color: Theme.accent;
                }
                off_hvr when !rd_ta.has-hover: {
                    color: Theme.background-lightest;
                }
            ]
        }
    }
}